import Head from "next/head";
import Image from "next/image";

import Header from "../components/Header";
import SectionHeader from "../components/SectionHeader";
import LandingPageSection from "../components/landingPageSection";
import Footer from "../components/Footer";

import { InstagramEmbed } from "react-social-media-embed";

import homeStyles from "../styles/Home.module.css";
import { client } from "./_app";

export default function Home({ instaLinks, landingSections, navLinks, hero }) {
    return (
        <>
            <Head>
                <title>Home - teamcursor</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1.0"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Header navLinks={navLinks} />

            <section
                id="sect1"
                className="min-h-screen w-full flex items-center p-4 relative"
            >
                <div className="hidden md:block">
                    <Image
                        src={hero.desktop.url}
                        layout="fill"
                        width={hero.desktop.width}
                        height={hero.desktop.height}
                        objectFit="cover"
                        priority={true}
                        className={`brightness-50 ${homeStyles.heroImage}`}
                    />
                </div>
                <div className="md:hidden block">
                    <Image
                        src={hero.mobile.url}
                        layout="fill"
                        width={hero.mobile.width}
                        height={hero.mobile.height}
                        objectFit="cover"
                        priority={true}
                        className={`brightness-50 ${homeStyles.heroImage} `}
                    />
                </div>
                <h1 className="font-extrabold xl:text-9xl lg:text-8xl text-7xl text-gray-50 lg:w-1/2 w-auto mx-auto text-center drop-shadow-lg">
                    {hero.heroText}
                </h1>
            </section>

            {landingSections &&
                landingSections.map((landingSection, index) => (
                    <LandingPageSection
                        {...landingSection}
                        key={index}
                        reverse={index % 2 != 0}
                    />
                ))}

            <section id="sect5" className="bg-gray-50 lg:px-4 lg:py-8">
                <div className="p-4 max-w-7xl mx-auto">
                    <SectionHeader text="Follow @teamcursor" />
                    <div className="flex items-center gap-8 overflow-x-auto md:scrollbar-hide scrollbar-default scrollbar-thin scrollbar-thumb-gray-400 hover:scrollbar-thumb-gray-500 p-4">
                        {instaLinks.map((postLink) => (
                            <div
                                className="shrink-0 max-w-sm overflow-hidden"
                                key={postLink}
                            >
                                <InstagramEmbed url={postLink} width={328} />
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            <Footer />
        </>
    );
}

export async function getStaticProps() {
    let instaLinks = await client.fetch(
        '*[_type == "instaLinks" ] | order(rank) {link}'
    );
    let landingSections = await client.fetch(
        '*[_type == "landingSection"] {"textContent": { heading, title, textBody }, "link": {"linkHref": link, "linkText": linkTitle}, "image": {"imageLink": sectionImage.asset->url, "width": sectionImage.asset->metadata.dimensions.width, "height": sectionImage.asset->metadata.dimensions.height}}'
    );
    let navLinks = await client.fetch(
        "*[_type == 'navLink'] | order(rank) {link, linkText}"
    );
    let hero = await client.fetch(
        `*[_type == "heroSection"] {heroText, "desktop": {"url": desktopCoverImage.asset->url, "width": desktopCoverImage.asset->metadata.dimensions.width, "height": desktopCoverImage.asset->metadata.dimensions.height}, "mobile": {"url": mobileCoverImage.asset->url, "width": mobileCoverImage.asset->metadata.dimensions.width, "height": mobileCoverImage.asset->metadata.dimensions.height } }`
    );
    hero = hero[0];
    instaLinks = instaLinks.map((obj) => obj.link);

    return {
        props: {
            instaLinks,
            landingSections,
            navLinks,
            hero,
        },
    };
}
